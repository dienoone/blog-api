{
    "info": {
        "name": "Laravel Blog Post API v1",
        "description": "Complete API collection for Laravel backend with authentication and test endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "laravel-api-v1"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{auth_token}}",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8000/api",
            "type": "string"
        },
        {
            "key": "auth_token",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.token) {",
                                    "        pm.collectionVariables.set('auth_token', jsonData.data.token);",
                                    "        pm.environment.set('auth_token', jsonData.data.token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123!@#\",\n    \"password_confirmation\": \"Password123!@#\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/auth/register",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "register"]
                        },
                        "description": "Register a new user. Requires:\n- name (string, max 255)\n- email (unique, valid email)\n- password (min 8 chars, mixed case, numbers, symbols)\n- password_confirmation (must match password)"
                    },
                    "response": []
                },
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.token) {",
                                    "        pm.collectionVariables.set('auth_token', jsonData.data.token);",
                                    "        pm.environment.set('auth_token', jsonData.data.token);",
                                    "        console.log('Token saved:', jsonData.data.token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/auth/login",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "login"]
                        },
                        "description": "Login with existing credentials. Token is automatically saved to collection variables."
                    },
                    "response": []
                },
                {
                    "name": "Get Profile",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/profile",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "profile"]
                        },
                        "description": "Get authenticated user profile. Requires Bearer token."
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/logout",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "logout"]
                        },
                        "description": "Logout current session (revokes current token only)."
                    },
                    "response": []
                },
                {
                    "name": "Logout All Devices",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/logout-all",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "logout-all"]
                        },
                        "description": "Logout from all devices (revokes all user tokens)."
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints for user registration, login, profile management, and logout."
        },
        {
            "name": "Test Endpoints",
            "item": [
                {
                    "name": "Test Success",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/success",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "success"]
                        },
                        "description": "Test successful response (200 OK)."
                    },
                    "response": []
                },
                {
                    "name": "Test Bad Request",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/bad-request",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "bad-request"]
                        },
                        "description": "Test bad request error (400)."
                    },
                    "response": []
                },
                {
                    "name": "Test Not Found",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/not-found",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "not-found"]
                        },
                        "description": "Test not found error (404)."
                    },
                    "response": []
                },
                {
                    "name": "Test Validation Error",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/validation",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "validation"]
                        },
                        "description": "Test validation error response (422)."
                    },
                    "response": []
                }
            ],
            "description": "Test endpoints to verify different response types and error handling. Remove these in production."
        },
        {
            "name": "Database Check",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "{{base_url}}/v1/db-check",
                    "host": ["{{base_url}}"],
                    "path": ["v1", "db-check"]
                },
                "description": "Check database connection and view all tables with their structure. Remove in production!"
            },
            "response": []
        }
    ]
}
