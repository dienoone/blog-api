{
    "info": {
        "name": "Laravel Blog Post API v1",
        "description": "Complete API collection for Laravel backend with authentication and test endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "laravel-api-v1"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{auth_token}}",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8000/api",
            "type": "string"
        },
        {
            "key": "auth_token",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.access_token) {",
                                    "        pm.collectionVariables.set('auth_token', jsonData.data.access_token);",
                                    "        pm.environment.set('auth_token', jsonData.data.access_token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123!@#\",\n    \"password_confirmation\": \"Password123!@#\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/auth/register",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "register"]
                        },
                        "description": "Register a new user. Requires:\n- name (string, max 255)\n- email (unique, valid email)\n- password (min 8 chars, mixed case, numbers, symbols)\n- password_confirmation (must match password)"
                    },
                    "response": []
                },
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.access_token) {",
                                    "        pm.collectionVariables.set('auth_token', jsonData.data.access_token);",
                                    "        pm.environment.set('auth_token', jsonData.data.access_token);",
                                    "        console.log('Token saved:', jsonData.data.access_token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/auth/login",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "login"]
                        },
                        "description": "Login with existing credentials. Token is automatically saved to collection variables."
                    },
                    "response": []
                },
                {
                    "name": "Get Profile",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/profile",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "profile"]
                        },
                        "description": "Get authenticated user profile. Requires Bearer token."
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/logout",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "logout"]
                        },
                        "description": "Logout current session (revokes current token only)."
                    },
                    "response": []
                },
                {
                    "name": "Logout All Devices",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/auth/logout-all",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "auth", "logout-all"]
                        },
                        "description": "Logout from all devices (revokes all user tokens)."
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints for user registration, login, profile management, and logout."
        },
        {
            "name": "Categories",
            "item": [
                {
                    "name": "Get All Categories",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/categories?search=&order_by=name&order_direction=asc&per_page=15",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories"],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "",
                                    "description": "Search by category name"
                                },
                                {
                                    "key": "order_by",
                                    "value": "name",
                                    "description": "Order by field (default: name)"
                                },
                                {
                                    "key": "order_direction",
                                    "value": "asc",
                                    "description": "Order direction: asc or desc"
                                },
                                {
                                    "key": "per_page",
                                    "value": "15",
                                    "description": "Items per page (default: 15)"
                                }
                            ]
                        },
                        "description": "Get paginated list of categories with optional filters. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Category by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/categories/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories", "1"]
                        },
                        "description": "Get single category by ID or slug. Includes related articles. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Category by Slug",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/categories/technology",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories", "technology"]
                        },
                        "description": "Get single category by slug. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Create Category",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Technology\",\n    \"slug\": \"technology\",\n    \"description\": \"All about technology and innovation\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/categories",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories"]
                        },
                        "description": "Create a new category. Requires authentication. Fields:\n- name (required, string, max:255)\n- slug (required, string, max:200, unique)\n- description (optional, string, max:1000)\n\nNote: Slug auto-generated from name if not provided."
                    },
                    "response": []
                },
                {
                    "name": "Update Category",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Technology & Innovation\",\n    \"description\": \"Updated description for technology category\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/categories/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories", "1"]
                        },
                        "description": "Update existing category. Requires authentication. All fields optional:\n- name (string, max:255)\n- slug (string, max:255, unique)\n- description (string, max:1000)\n\nNote: Slug auto-updated from name if name changes and slug not provided."
                    },
                    "response": []
                },
                {
                    "name": "Delete Category",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/categories/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "categories", "1"]
                        },
                        "description": "Delete category by ID. Requires authentication. Cannot delete category with existing articles."
                    },
                    "response": []
                }
            ],
            "description": "Category management endpoints. Public endpoints for listing/viewing, protected endpoints for create/update/delete."
        },
        {
            "name": "Articles",
            "item": [
                {
                    "name": "Get All Articles",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles?status=published&category=&tag=&author=&search=&order_by=created_at&order_direction=desc&per_page=15",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles"],
                            "query": [
                                {
                                    "key": "status",
                                    "value": "published",
                                    "description": "Filter by status: published, draft, archived"
                                },
                                {
                                    "key": "category",
                                    "value": "",
                                    "description": "Filter by category ID"
                                },
                                {
                                    "key": "tag",
                                    "value": "",
                                    "description": "Filter by tag ID or slug"
                                },
                                {
                                    "key": "author",
                                    "value": "",
                                    "description": "Filter by author ID"
                                },
                                {
                                    "key": "search",
                                    "value": "",
                                    "description": "Search in title, excerpt, content"
                                },
                                {
                                    "key": "order_by",
                                    "value": "created_at",
                                    "description": "Order by field (default: created_at)"
                                },
                                {
                                    "key": "order_direction",
                                    "value": "desc",
                                    "description": "Order direction: asc or desc"
                                },
                                {
                                    "key": "per_page",
                                    "value": "15",
                                    "description": "Items per page (default: 15)"
                                }
                            ]
                        },
                        "description": "Get paginated list of articles with optional filters. Public endpoint shows only published articles unless authenticated."
                    },
                    "response": []
                },
                {
                    "name": "Get Popular Articles",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/popular?limit=10",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "popular"],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10",
                                    "description": "Number of articles to return (default: 10)"
                                }
                            ]
                        },
                        "description": "Get most popular articles ordered by likes count. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Article by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1"]
                        },
                        "description": "Get single article by ID or slug. Includes author, category, tags, and approved comments. Increments view count. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Article by Slug",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/my-first-article",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "my-first-article"]
                        },
                        "description": "Get single article by slug. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get User Articles",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/users/1/articles?status=&per_page=15",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "users", "1", "articles"],
                            "query": [
                                {
                                    "key": "status",
                                    "value": "",
                                    "description": "Filter by status"
                                },
                                {
                                    "key": "per_page",
                                    "value": "15",
                                    "description": "Items per page"
                                }
                            ]
                        },
                        "description": "Get all articles by specific user. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Create Article (JSON)",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"My First Article\",\n    \"excerpt\": \"This is a brief summary of the article\",\n    \"content\": \"This is the full content of the article with detailed information...\",\n    \"category_id\": 1,\n    \"tags\": [\"Laravel\", \"PHP\", \"Web Development\"],\n    \"status\": \"draft\",\n    \"published_at\": null\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/articles",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles"]
                        },
                        "description": "Create a new article (without image). Requires authentication. Fields:\n- title (required, string, max:255)\n- excerpt (optional, string, max:500)\n- content (required, string)\n- category_id (required, exists in categories)\n- tags (optional, array of tag names)\n- status (optional: draft, published, archived - default: draft)\n- published_at (optional, datetime)\n\nNote: Slug auto-generated from title."
                    },
                    "response": []
                },
                {
                    "name": "Create Article (with Image)",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "title",
                                    "value": "Article with Featured Image",
                                    "type": "text"
                                },
                                {
                                    "key": "excerpt",
                                    "value": "Brief summary of the article",
                                    "type": "text"
                                },
                                {
                                    "key": "content",
                                    "value": "Full article content goes here...",
                                    "type": "text"
                                },
                                {
                                    "key": "category_id",
                                    "value": "1",
                                    "type": "text"
                                },
                                {
                                    "key": "tags[]",
                                    "value": "Laravel",
                                    "type": "text"
                                },
                                {
                                    "key": "tags[]",
                                    "value": "PHP",
                                    "type": "text"
                                },
                                {
                                    "key": "featured_image",
                                    "type": "file",
                                    "src": []
                                },
                                {
                                    "key": "status",
                                    "value": "published",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/articles",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles"]
                        },
                        "description": "Create article with featured image upload. Use form-data. Image max 2MB."
                    },
                    "response": []
                },
                {
                    "name": "Update Article (JSON)",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Updated Article Title\",\n    \"excerpt\": \"Updated excerpt\",\n    \"content\": \"Updated content...\",\n    \"category_id\": 2,\n    \"tags\": [\"Updated Tag\", \"Another Tag\"],\n    \"status\": \"published\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1"]
                        },
                        "description": "Update existing article. Requires authentication and ownership. All fields optional:\n- title (string, max:255)\n- excerpt (string, max:500)\n- content (string)\n- category_id (exists in categories)\n- tags (array of tag names)\n- status (draft, published, archived)\n- published_at (datetime)\n\nNote: Only article author can update."
                    },
                    "response": []
                },
                {
                    "name": "Update Article (with Image)",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "_method",
                                    "value": "PUT",
                                    "type": "text",
                                    "description": "Laravel method spoofing for file upload"
                                },
                                {
                                    "key": "title",
                                    "value": "Updated Title",
                                    "type": "text"
                                },
                                {
                                    "key": "featured_image",
                                    "type": "file",
                                    "src": []
                                },
                                {
                                    "key": "status",
                                    "value": "published",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1"]
                        },
                        "description": "Update article with new featured image. Use POST with _method=PUT for file uploads. Old image will be deleted."
                    },
                    "response": []
                },
                {
                    "name": "Delete Article",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1"]
                        },
                        "description": "Delete article by ID. Requires authentication and ownership. Featured image will be deleted from storage. Only article author can delete."
                    },
                    "response": []
                },
                {
                    "name": "Toggle Like on Article",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1/like",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1", "like"]
                        },
                        "description": "Toggle like status on an article. Requires authentication. Returns updated like status and count."
                    },
                    "response": []
                }
            ],
            "description": "Article management endpoints. Public endpoints for listing/viewing, protected endpoints for create/update/delete."
        },
        {
            "name": "Tags",
            "item": [
                {
                    "name": "Get All Tags",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/tags?search=&with_count=1&order_by=name&order_direction=asc&per_page=15&all=0",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags"],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "",
                                    "description": "Search by tag name"
                                },
                                {
                                    "key": "with_count",
                                    "value": "1",
                                    "description": "Include article count (1 or 0)"
                                },
                                {
                                    "key": "order_by",
                                    "value": "name",
                                    "description": "Order by field (default: name)"
                                },
                                {
                                    "key": "order_direction",
                                    "value": "asc",
                                    "description": "Order direction: asc or desc"
                                },
                                {
                                    "key": "per_page",
                                    "value": "15",
                                    "description": "Items per page (default: 15)"
                                },
                                {
                                    "key": "all",
                                    "value": "0",
                                    "description": "Get all tags without pagination (1 or 0)"
                                }
                            ]
                        },
                        "description": "Get paginated list of tags with optional filters. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Popular Tags",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/tags/popular?limit=20",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags", "popular"],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "20",
                                    "description": "Number of tags to return (default: 20)"
                                }
                            ]
                        },
                        "description": "Get most popular tags ordered by article count. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Tag by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/tags/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags", "1"]
                        },
                        "description": "Get single tag by ID or slug. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Get Tag by Slug",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/tags/laravel",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags", "laravel"]
                        },
                        "description": "Get single tag by slug. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Create Tag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Laravel\",\n    \"slug\": \"laravel\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/tags",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags"]
                        },
                        "description": "Create a new tag. Requires authentication. Fields:\n- name (required, string, max:50)\n- slug (optional, string, max:50, unique)\n\nNote: Slug auto-generated from name if not provided."
                    },
                    "response": []
                },
                {
                    "name": "Update Tag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Laravel Framework\",\n    \"slug\": \"laravel-framework\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/tags/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags", "1"]
                        },
                        "description": "Update existing tag. Requires authentication. All fields optional:\n- name (string, max:50)\n- slug (string, max:50, unique)\n\nNote: Slug auto-updated from name if name changes and slug not provided."
                    },
                    "response": []
                },
                {
                    "name": "Delete Tag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/tags/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "tags", "1"]
                        },
                        "description": "Delete tag by ID. Requires authentication. Tag relationships with articles will be removed."
                    },
                    "response": []
                }
            ],
            "description": "Tag management endpoints. Public endpoints for listing/viewing, protected endpoints for create/update/delete."
        },
        {
            "name": "Comments",
            "item": [
                {
                    "name": "Get Article Comments",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/articles/1/comments?order_by=created_at&order_direction=desc",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "articles", "1", "comments"],
                            "query": [
                                {
                                    "key": "order_by",
                                    "value": "created_at",
                                    "description": "Order by field (default: created_at)"
                                },
                                {
                                    "key": "order_direction",
                                    "value": "desc",
                                    "description": "Order direction: asc or desc"
                                }
                            ]
                        },
                        "description": "Get all comments for a specific article. Returns top-level comments with nested replies. Public endpoint."
                    },
                    "response": []
                },
                {
                    "name": "Create Comment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"article_id\": 1,\n    \"content\": \"This is a great article! Very informative.\",\n    \"parent_id\": null\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/comments",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "comments"]
                        },
                        "description": "Create a new comment or reply. Requires authentication. Fields:\n- article_id (required, must exist)\n- content (required, string, max:1000)\n- parent_id (optional, to reply to another comment)\n\nNote: Comments are set to not approved by default and require moderation."
                    },
                    "response": []
                },
                {
                    "name": "Create Comment Reply",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"article_id\": 1,\n    \"content\": \"Thanks for the comment! I appreciate your feedback.\",\n    \"parent_id\": 1\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/comments",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "comments"]
                        },
                        "description": "Create a reply to an existing comment. Requires authentication and valid parent_id. The parent comment must belong to the same article."
                    },
                    "response": []
                },
                {
                    "name": "Update Comment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"content\": \"Updated comment text - fixing a typo from my previous comment.\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/v1/comments/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "comments", "1"]
                        },
                        "description": "Update existing comment. Requires authentication and ownership. Only the comment author can update their own comments. Fields:\n- content (required, string, max:1000)"
                    },
                    "response": []
                },
                {
                    "name": "Delete Comment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/comments/1",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "comments", "1"]
                        },
                        "description": "Delete comment by ID. Requires authentication and ownership. Only the comment author can delete their own comments. Deleting a parent comment will also delete all nested replies."
                    },
                    "response": []
                },
                {
                    "name": "Toggle Like on Comment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/comments/1/like",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "comments", "1", "like"]
                        },
                        "description": "Toggle like status on a comment. Requires authentication. Returns updated like status and count."
                    },
                    "response": []
                }
            ],
            "description": "Comment management endpoints. Public endpoints for listing, protected endpoints for create/update/delete."
        },
        {
            "name": "Test Endpoints",
            "item": [
                {
                    "name": "Test Success",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/success",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "success"]
                        },
                        "description": "Test successful response (200 OK)."
                    },
                    "response": []
                },
                {
                    "name": "Test Bad Request",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/bad-request",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "bad-request"]
                        },
                        "description": "Test bad request error (400)."
                    },
                    "response": []
                },
                {
                    "name": "Test Not Found",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/not-found",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "not-found"]
                        },
                        "description": "Test not found error (404)."
                    },
                    "response": []
                },
                {
                    "name": "Test Validation Error",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/v1/test/validation",
                            "host": ["{{base_url}}"],
                            "path": ["v1", "test", "validation"]
                        },
                        "description": "Test validation error response (422)."
                    },
                    "response": []
                }
            ],
            "description": "Test endpoints to verify different response types and error handling. Remove these in production."
        },
        {
            "name": "Database Check",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "{{base_url}}/v1/db-check",
                    "host": ["{{base_url}}"],
                    "path": ["v1", "db-check"]
                },
                "description": "Check database connection and view all tables with their structure. Remove in production!"
            },
            "response": []
        }
    ]
}
